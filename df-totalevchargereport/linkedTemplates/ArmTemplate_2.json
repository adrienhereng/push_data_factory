{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-totalevchargereport"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SrcFileCpoGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TotalevchargeBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "cpo_group",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cpo_group_pk",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcFileEvse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TotalevchargeBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "evse",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "evse_pk",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "charging_station_fk",
						"type": "String"
					},
					{
						"name": "retired_date",
						"type": "String"
					},
					{
						"name": "in_service_date",
						"type": "String"
					},
					{
						"name": "service_status",
						"type": "String"
					},
					{
						"name": "max_power",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcFileEvseModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TotalevchargeBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "evse_model",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "model_pk",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "manufacturer",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcFileLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TotalevchargeBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "location",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "location_pk",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "cpo_fk",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "country_id",
						"type": "String"
					},
					{
						"name": "zip_code",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcFileTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TotalevchargeBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Azure Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "transaction",
						"container": "inputfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "evse_id",
						"type": "String"
					},
					{
						"name": "token_id",
						"type": "String"
					},
					{
						"name": "auth_method",
						"type": "String"
					},
					{
						"name": "emsp",
						"type": "String"
					},
					{
						"name": "session_start_date",
						"type": "String"
					},
					{
						"name": "session_stop_date",
						"type": "String"
					},
					{
						"name": "connector_type",
						"type": "String"
					},
					{
						"name": "consumed_energy",
						"type": "String"
					},
					{
						"name": "session_duration",
						"type": "String"
					},
					{
						"name": "max_power",
						"type": "String"
					},
					{
						"name": "compliance",
						"type": "String"
					},
					{
						"name": "taxed_price",
						"type": "String"
					},
					{
						"name": "non_taxed_price",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_DWH1_DWH2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_ChargingStation",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH2].[CHARGING_STATION] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CHARGING_STATION_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CHARGING_STATION_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LOCATION_FK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LOCATION_FK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MODEL_FK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MODEL_FK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_CHARGING_STATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_CHARGING_STATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_CPO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_ChargingStation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH1].[CPO] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPO_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPO_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPO_GROUP_FK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPO_GROUP_FK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BUSINESS_ACTIVITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BUSINESS_ACTIVITY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SERVICE_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SERVICE_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CREATION_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "CREATION_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IN_SERVICE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "IN_SERVICE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "RETIRED_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "RETIRED_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_CPO",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_CPO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_CPOGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_CPO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH1].[CPO_GROUP] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPO_GROUP_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPO_GROUP_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_CPO_GROUP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_CPO_GROUP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_EVSE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_CPOGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH1].[EVSE] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EVSE_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EVSE_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CHARGING_STATION_FK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CHARGING_STATION_FK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RETIRED_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "RETIRED_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SERVICE_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SERVICE_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IN_SERVICE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "IN_SERVICE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MAX_POWER",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MAX_POWER",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_EVSE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_EVSE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_EVSE_Model",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_EVSE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH1].[EVSE_MODEL] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MODEL_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MODEL_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_EVSE_MODEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_EVSE_MODEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_Location",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_EVSE_Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [DWH1].[LOCATION] where ACTIVE=1;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LOCATION_PK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LOCATION_PK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPO_FK",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPO_FK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CITY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNTRY_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "COUNTRY_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZIP_CODE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ZIP_CODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LATITUDE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LATITUDE",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LONGITUDE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LONGITUDE",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_LOCATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_LOCATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_Transactions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CLOSING_DATE",
										"value": {
											"value": "@{UTCNOW()}",
											"type": "Expression"
										}
									},
									{
										"name": "date_functional",
										"value": {
											"value": "@{pipeline().parameters.Functional_Date}",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "IF OBJECT_ID('[DWH2].[TRANSACTIONS]')  IS NOT NULL TRUNCATE TABLE [DWH2].[TRANSACTIONS];\n",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EVSE_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EVSE_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOKEN_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TOKEN_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AUTH_METHOD",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AUTH_METHOD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EMSP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EMSP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SESSION_START_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "SESSION_START_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SESSION_STOP_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "SESSION_STOP_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CONNECTOR_TYPE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CONNECTOR_TYPE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CONSUMED_ENERGY",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONSUMED_ENERGY",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SESSION_DURATION",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SESSION_DURATION",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MAX_POWER",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "MAX_POWER",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "COMPLIANCE",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "COMPLIANCE",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAXED_PRICE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TAXED_PRICE",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NON_TAXED_PRICE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NON_TAXED_PRICE",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TECHNICAL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "date_functional"
										},
										"sink": {
											"name": "FUNCTIONAL_DATE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CLOSING_DATE"
										},
										"sink": {
											"name": "CLOSING_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DWH1_TRANSACTIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH2_TRANSACTIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"Functional_Date": {
						"type": "int"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T08:37:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DIM_CHARGING_STATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "DWH2ChargingStation"
						},
						{
							"dataset": {
								"referenceName": "DM_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "DMEvseModel"
						},
						{
							"dataset": {
								"referenceName": "DM_LOCATION",
								"type": "DatasetReference"
							},
							"name": "DMLocation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						}
					],
					"script": "source(output(\n\t\tCHARGING_STATION_PK as string,\n\t\tLOCATION_FK as string,\n\t\tMODEL_FK as string,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[CHARGING_STATION] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[CHARGING_STATION] )',\n\tformat: 'query') ~> DWH2ChargingStation\nsource(output(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tCLOSING_DATE as date,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMEvseModel\nsource(output(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tCLOSING_DATE as date,\n\t\tID_CPO as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMLocation\nDWH2ChargingStation, DMLocation join(LOCATION_FK == LOCATION_PK\n\t&& DWH2ChargingStation@CLOSING_DATE == DMLocation@CLOSING_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1, DMEvseModel join(MODEL_FK == MODEL_PK\n\t&& DWH2ChargingStation@CLOSING_DATE == DMEvseModel@CLOSING_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 sink(input(\n\t\tCHARGING_STATION_PK as string,\n\t\tCLOSING_DATE as date,\n\t\tID_LOCATION as integer,\n\t\tID_MODEL as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[DIM_CHARGING_STATION]'],\n\tmapColumn(\n\t\tCHARGING_STATION_PK,\n\t\tCLOSING_DATE = DWH2ChargingStation@CLOSING_DATE,\n\t\tID_LOCATION = DMLocation@Id,\n\t\tID_MODEL = DMEvseModel@Id,\n\t\tFUNCTIONAL_DATE = DWH2ChargingStation@FUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DIM_CPO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_CPO",
								"type": "DatasetReference"
							},
							"name": "DWH2CPO"
						},
						{
							"dataset": {
								"referenceName": "DWH2_CPO_GROUP",
								"type": "DatasetReference"
							},
							"name": "DWH2CPgroupe"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_CPO",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[CPO] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[CPO])',\n\tformat: 'query') ~> DWH2CPO\nsource(output(\n\t\tCPO_GROUP_PK as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[CPO_GROUP] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[CPO_GROUP])',\n\tformat: 'query') ~> DWH2CPgroupe\nDWH2CPO, DWH2CPgroupe join(CPO_GROUP_FK == CPO_GROUP_PK\n\t&& DWH2CPO@CLOSING_DATE == DWH2CPgroupe@CLOSING_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(input(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tCPO_GROUP as string,\n\t\tCLOSING_DATE as date,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[DIM_CPO]'],\n\tmapColumn(\n\t\tCPO_PK,\n\t\tNAME,\n\t\tCPO_GROUP_FK,\n\t\tBUSINESS_ACTIVITY,\n\t\tSERVICE_STATUS,\n\t\tCREATION_DATE,\n\t\tIN_SERVICE_DATE,\n\t\tRETIRED_DATE,\n\t\tCPO_GROUP = CPO_GROUP_PK,\n\t\tCLOSING_DATE = DWH2CPO@CLOSING_DATE,\n\t\tFUNCTIONAL_DATE = DWH2CPO@FUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DIM_EVSE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_EVSE",
								"type": "DatasetReference"
							},
							"name": "DWH2EVSE"
						},
						{
							"dataset": {
								"referenceName": "DM_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "DMChargigStation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EVSE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join2"
						}
					],
					"script": "source(output(\n\t\tEVSE_PK as string,\n\t\tCHARGING_STATION_FK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[EVSE] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[EVSE] )',\n\tformat: 'query') ~> DWH2EVSE\nsource(output(\n\t\tCHARGING_STATION_PK as string,\n\t\tCLOSING_DATE as date,\n\t\tID_LOCATION as integer,\n\t\tID_MODEL as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMChargigStation\nDWH2EVSE, DMChargigStation join(DWH2EVSE@CLOSING_DATE == DMChargigStation@CLOSING_DATE\n\t&& CHARGING_STATION_FK == CHARGING_STATION_PK,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 sink(input(\n\t\tEVSE_PK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tCLOSING_DATE as date,\n\t\tID_CHARGING_STATION as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[DIM_EVSE]'],\n\tmapColumn(\n\t\tEVSE_PK,\n\t\tNAME,\n\t\tRETIRED_DATE,\n\t\tSERVICE_STATUS,\n\t\tIN_SERVICE_DATE,\n\t\tMAX_POWER,\n\t\tCLOSING_DATE = DWH2EVSE@CLOSING_DATE,\n\t\tID_CHARGING_STATION = DMChargigStation@Id,\n\t\tFUNCTIONAL_DATE = DWH2EVSE@FUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DIM_Location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_LOCATION",
								"type": "DatasetReference"
							},
							"name": "DWH2LOCATION"
						},
						{
							"dataset": {
								"referenceName": "DM_CPO",
								"type": "DatasetReference"
							},
							"name": "DMCPO"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_LOCATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCPO_FK as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[LOCATION] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[LOCATION])',\n\tformat: 'query') ~> DWH2LOCATION\nsource(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tCPO_GROUP as string,\n\t\tCLOSING_DATE as date,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMCPO\nDWH2LOCATION, DMCPO join(DWH2LOCATION@CLOSING_DATE == DMCPO@CLOSING_DATE\n\t&& CPO_FK == CPO_PK,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(input(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tCLOSING_DATE as date,\n\t\tID_CPO as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[DIM_LOCATION]'],\n\tmapColumn(\n\t\tLOCATION_PK,\n\t\tNAME = DWH2LOCATION@NAME,\n\t\tCITY,\n\t\tCOUNTRY_ID,\n\t\tZIP_CODE,\n\t\tLATITUDE,\n\t\tLONGITUDE,\n\t\tCLOSING_DATE = DWH2LOCATION@CLOSING_DATE,\n\t\tID_CPO = DMCPO@Id,\n\t\tFUNCTIONAL_DATE = DWH2LOCATION@FUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DIM_MODEL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "DWH2Model"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[EVSE_MODEL] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[EVSE_MODEL] )',\n\tformat: 'query') ~> DWH2Model\nDWH2Model sink(input(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tCLOSING_DATE as date,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[DIM_EVSE_MODEL]'],\n\tmapColumn(\n\t\tMODEL_PK,\n\t\tNAME,\n\t\tDESCRIPTION,\n\t\tMANUFACTURER,\n\t\tCLOSING_DATE,\n\t\tFUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_CPO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_CPO",
								"type": "DatasetReference"
							},
							"name": "STGCPO"
						},
						{
							"dataset": {
								"referenceName": "DWH1_CPO",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_CPO",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as string,\n\t\tTECHNICAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGCPO\nsource(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGCPO derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGCPO@CPO_PK == source1@CPO_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGCPO@CPO_PK,source1@CPO_PK)&&equals(DerivedColumn1@TECHNICAL_DATE,source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CPO_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].CPO Set ACTIVE=0;\\n\\nupdate [DWH1].[CPO] Set ACTIVE=1\\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].CPO);'],\n\tmapColumn(\n\t\tCPO_PK = STGCPO@CPO_PK,\n\t\tNAME = STGCPO@NAME,\n\t\tCPO_GROUP_FK = STGCPO@CPO_GROUP_FK,\n\t\tBUSINESS_ACTIVITY = STGCPO@BUSINESS_ACTIVITY,\n\t\tSERVICE_STATUS = STGCPO@SERVICE_STATUS,\n\t\tCREATION_DATE = STGCPO@CREATION_DATE,\n\t\tIN_SERVICE_DATE = STGCPO@IN_SERVICE_DATE,\n\t\tRETIRED_DATE = STGCPO@RETIRED_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tACTIVE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_CPO_GROUP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_CPO_GROUP",
								"type": "DatasetReference"
							},
							"name": "STGcharginSTATION"
						},
						{
							"dataset": {
								"referenceName": "DWH1_CPO_GROUP",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_CPO_GROUP",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tCPO_GROUP_PK as string,\n\t\tTECHNICAL_DATE as string,\n\t\tFUNCTIONAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGcharginSTATION\nsource(output(\n\t\tCPO_GROUP_PK as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGcharginSTATION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGcharginSTATION@CPO_GROUP_PK == source1@CPO_GROUP_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGcharginSTATION@CPO_GROUP_PK,source1@CPO_GROUP_PK)&&equals(DerivedColumn1@TECHNICAL_DATE,source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tCPO_GROUP_PK as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CPO_GROUP_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].CPO_GROUP Set ACTIVE=0;\\n\\nupdate [DWH1].[CPO_GROUP] Set ACTIVE=1\\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].[CPO_GROUP]);'],\n\tmapColumn(\n\t\tCPO_GROUP_PK = STGcharginSTATION@CPO_GROUP_PK,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tACTIVE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_Charging_station')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "STGcharginSTATION"
						},
						{
							"dataset": {
								"referenceName": "DWH1_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_CHARGING_STATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tCHARGING_STATION_PK as string,\n\t\tLOCATION_FK as string,\n\t\tMODEL_FK as string,\n\t\tFUNCTIONAL_DATE as string,\n\t\tTECHNICAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGcharginSTATION\nsource(output(\n\t\tCHARGING_STATION_PK as string,\n\t\tLOCATION_FK as string,\n\t\tMODEL_FK as string,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGcharginSTATION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nJoin1 alterRow(updateIf(equals(STGcharginSTATION@CHARGING_STATION_PK,source1@CHARGING_STATION_PK)&&equals(source1@TECHNICAL_DATE,DerivedColumn1@TECHNICAL_DATE))) ~> AlterRow1\nDerivedColumn1, source1 join(STGcharginSTATION@CHARGING_STATION_PK == source1@CHARGING_STATION_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nAlterRow1 sink(input(\n\t\tCHARGING_STATION_PK as string,\n\t\tLOCATION_FK as string,\n\t\tMODEL_FK as string,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CHARGING_STATION_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].[CHARGING_STATION] Set ACTIVE=0;\\n\\nupdate [DWH1].[CHARGING_STATION] Set ACTIVE=1 \\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].[CHARGING_STATION]);'],\n\tmapColumn(\n\t\tCHARGING_STATION_PK = STGcharginSTATION@CHARGING_STATION_PK,\n\t\tLOCATION_FK = STGcharginSTATION@LOCATION_FK,\n\t\tMODEL_FK = STGcharginSTATION@MODEL_FK,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tACTIVE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_EVSE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EVSE",
								"type": "DatasetReference"
							},
							"name": "STGcharginSTATION"
						},
						{
							"dataset": {
								"referenceName": "DWH1_EVSE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_EVSE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tEVSE_PK as string,\n\t\tCHARGING_STATION_FK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tTECHNICAL_DATE as string,\n\t\tFUNCTIONAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGcharginSTATION\nsource(output(\n\t\tEVSE_PK as string,\n\t\tCHARGING_STATION_FK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGcharginSTATION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGcharginSTATION@EVSE_PK == source1@EVSE_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGcharginSTATION@EVSE_PK,source1@EVSE_PK)&&equals(DerivedColumn1@TECHNICAL_DATE,source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tEVSE_PK as string,\n\t\tCHARGING_STATION_FK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['EVSE_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].EVSE Set ACTIVE=0;\\n\\nupdate [DWH1].EVSE Set ACTIVE=1\\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].EVSE);'],\n\tmapColumn(\n\t\tEVSE_PK = STGcharginSTATION@EVSE_PK,\n\t\tCHARGING_STATION_FK = STGcharginSTATION@CHARGING_STATION_FK,\n\t\tNAME = STGcharginSTATION@NAME,\n\t\tRETIRED_DATE = STGcharginSTATION@RETIRED_DATE,\n\t\tSERVICE_STATUS = STGcharginSTATION@SERVICE_STATUS,\n\t\tIN_SERVICE_DATE = STGcharginSTATION@IN_SERVICE_DATE,\n\t\tMAX_POWER = STGcharginSTATION@MAX_POWER,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tACTIVE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_EVSE_MODEL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "STGcharginSTATION"
						},
						{
							"dataset": {
								"referenceName": "DWH1_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_EVSE_MODEL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tTECHNICAL_DATE as string,\n\t\tFUNCTIONAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGcharginSTATION\nsource(output(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGcharginSTATION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGcharginSTATION@MODEL_PK == source1@MODEL_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGcharginSTATION@MODEL_PK,source1@MODEL_PK)&&equals(DerivedColumn1@TECHNICAL_DATE,source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tMODEL_PK as string,\n\t\tNAME as string,\n\t\tDESCRIPTION as string,\n\t\tMANUFACTURER as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['MODEL_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].EVSE_MODEL Set ACTIVE=0;\\n\\nupdate [DWH1].EVSE_MODEL Set ACTIVE=1\\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].EVSE_MODEL);'],\n\tmapColumn(\n\t\tNAME = STGcharginSTATION@NAME,\n\t\tDESCRIPTION = STGcharginSTATION@DESCRIPTION,\n\t\tMANUFACTURER = STGcharginSTATION@MANUFACTURER,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tACTIVE,\n\t\tMODEL_PK = STGcharginSTATION@MODEL_PK\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_DWH1_LOCATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_LOCATION",
								"type": "DatasetReference"
							},
							"name": "STGcharginSTATION"
						},
						{
							"dataset": {
								"referenceName": "DWH1_LOCATION",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_LOCATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCPO_FK as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tTECHNICAL_DATE as string,\n\t\tFUNCTIONAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGcharginSTATION\nsource(output(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCPO_FK as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGcharginSTATION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGcharginSTATION@LOCATION_PK == source1@LOCATION_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGcharginSTATION@LOCATION_PK,source1@LOCATION_PK)&&equals(DerivedColumn1@TECHNICAL_DATE,source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tLOCATION_PK as string,\n\t\tNAME as string,\n\t\tCPO_FK as string,\n\t\tCITY as string,\n\t\tCOUNTRY_ID as string,\n\t\tZIP_CODE as string,\n\t\tLATITUDE as double,\n\t\tLONGITUDE as double,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['LOCATION_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].[LOCATION] Set ACTIVE=0;\\n\\nupdate [DWH1].[LOCATION] Set ACTIVE=1 \\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].[LOCATION]);'],\n\tmapColumn(\n\t\tNAME = STGcharginSTATION@NAME,\n\t\tCPO_FK = STGcharginSTATION@CPO_FK,\n\t\tCITY = STGcharginSTATION@CITY,\n\t\tCOUNTRY_ID = STGcharginSTATION@COUNTRY_ID,\n\t\tZIP_CODE = STGcharginSTATION@ZIP_CODE,\n\t\tLATITUDE = STGcharginSTATION@LATITUDE,\n\t\tLONGITUDE = STGcharginSTATION@LONGITUDE,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tACTIVE,\n\t\tLOCATION_PK = STGcharginSTATION@LOCATION_PK\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_FACT_Transactions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DWH2_TRANSACTIONS",
								"type": "DatasetReference"
							},
							"name": "DWH2TRANSACTION"
						},
						{
							"dataset": {
								"referenceName": "DM_EVSE",
								"type": "DatasetReference"
							},
							"name": "DMEVSE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_TRANSACTIONS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEVSE_ID as string,\n\t\tTOKEN_ID as string,\n\t\tAUTH_METHOD as string,\n\t\tEMSP as string,\n\t\tSESSION_START_DATE as date,\n\t\tSESSION_STOP_DATE as date,\n\t\tCONNECTOR_TYPE as string,\n\t\tCONSUMED_ENERGY as integer,\n\t\tSESSION_DURATION as integer,\n\t\tMAX_POWER as double,\n\t\tCOMPLIANCE as boolean,\n\t\tTAXED_PRICE as double,\n\t\tNON_TAXED_PRICE as double,\n\t\tCURRENCY as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer,\n\t\tCLOSING_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [DWH2].[TRANSACTIONS] where CLOSING_DATE= (select max(CLOSING_DATE) from [DWH2].[TRANSACTIONS] )',\n\tformat: 'query') ~> DWH2TRANSACTION\nsource(output(\n\t\tEVSE_PK as string,\n\t\tNAME as string,\n\t\tRETIRED_DATE as date,\n\t\tSERVICE_STATUS as string,\n\t\tIN_SERVICE_DATE as date,\n\t\tMAX_POWER as integer,\n\t\tCLOSING_DATE as date,\n\t\tID_CHARGING_STATION as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMEVSE\nDWH2TRANSACTION, DMEVSE join(EVSE_ID == EVSE_PK\n\t&& DWH2TRANSACTION@CLOSING_DATE == DMEVSE@CLOSING_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(input(\n\t\tTOKEN_ID as string,\n\t\tAUTH_METHOD as string,\n\t\tEMSP as string,\n\t\tSESSION_START_DATE as date,\n\t\tSESSION_STOP_DATE as date,\n\t\tCONNECTOR_TYPE as string,\n\t\tCONSUMED_ENERGY as integer,\n\t\tSESSION_DURATION as integer,\n\t\tMAX_POWER as double,\n\t\tCOMPLIANCE as boolean,\n\t\tTAXED_PRICE as double,\n\t\tNON_TAXED_PRICE as double,\n\t\tCURRENCY as string,\n\t\tCLOSING_DATE as date,\n\t\tID_EVSE as integer,\n\t\tID_Date as integer,\n\t\tId as integer,\n\t\tFUNCTIONAL_DATE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [DM].[FACT_TRANSACTIONS]'],\n\tmapColumn(\n\t\tTOKEN_ID,\n\t\tAUTH_METHOD,\n\t\tEMSP,\n\t\tSESSION_START_DATE,\n\t\tSESSION_STOP_DATE,\n\t\tCONNECTOR_TYPE,\n\t\tCONSUMED_ENERGY,\n\t\tSESSION_DURATION,\n\t\tMAX_POWER = DWH2TRANSACTION@MAX_POWER,\n\t\tCOMPLIANCE,\n\t\tTAXED_PRICE,\n\t\tNON_TAXED_PRICE,\n\t\tCURRENCY,\n\t\tCLOSING_DATE = DWH2TRANSACTION@CLOSING_DATE,\n\t\tID_EVSE = DMEVSE@Id,\n\t\tFUNCTIONAL_DATE = DWH2TRANSACTION@FUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Load_TRANSACTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_TRANSACTIONS",
								"type": "DatasetReference"
							},
							"name": "STGTANSACTION"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWH1_TRANSACTIONS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tEVSE_ID as string,\n\t\tTOKEN_ID as string,\n\t\tAUTH_METHOD as string,\n\t\tEMSP as string,\n\t\tSESSION_START_DATE as date,\n\t\tSESSION_STOP_DATE as date,\n\t\tCONNECTOR_TYPE as string,\n\t\tCONSUMED_ENERGY as integer,\n\t\tSESSION_DURATION as integer,\n\t\tMAX_POWER as double,\n\t\tCOMPLIANCE as boolean,\n\t\tTAXED_PRICE as double,\n\t\tNON_TAXED_PRICE as double,\n\t\tCURRENCY as string,\n\t\tTECHNICAL_DATE as string,\n\t\tFUNCTIONAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGTANSACTION\nSTGTANSACTION derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy')) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tEVSE_ID as string,\n\t\tTOKEN_ID as string,\n\t\tAUTH_METHOD as string,\n\t\tEMSP as string,\n\t\tSESSION_START_DATE as date,\n\t\tSESSION_STOP_DATE as date,\n\t\tCONNECTOR_TYPE as string,\n\t\tCONSUMED_ENERGY as integer,\n\t\tSESSION_DURATION as integer,\n\t\tMAX_POWER as double,\n\t\tCOMPLIANCE as boolean,\n\t\tTAXED_PRICE as double,\n\t\tNON_TAXED_PRICE as double,\n\t\tCURRENCY as string,\n\t\tTECHNICAL_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEVSE_ID,\n\t\tTOKEN_ID,\n\t\tAUTH_METHOD,\n\t\tEMSP,\n\t\tSESSION_START_DATE,\n\t\tSESSION_STOP_DATE,\n\t\tCONNECTOR_TYPE,\n\t\tCONSUMED_ENERGY,\n\t\tSESSION_DURATION,\n\t\tMAX_POWER,\n\t\tCOMPLIANCE,\n\t\tTAXED_PRICE,\n\t\tNON_TAXED_PRICE,\n\t\tCURRENCY,\n\t\tTECHNICAL_DATE,\n\t\tFUNCTIONAL_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_DATAMARTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Load_DIM_CPO",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_DIM_CPO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2CPO": {},
									"DWH2CPgroupe": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "DF_Load_DIM_Location",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Load_DIM_CPO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_DIM_Location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2LOCATION": {},
									"DMCPO": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "DF_Load_DIM_MODEL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_DIM_MODEL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2Model": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "DF_Load_DIM_CHARGING_STATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Load_DIM_MODEL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DF_Load_DIM_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_DIM_CHARGING_STATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2ChargingStation": {},
									"DMEvseModel": {},
									"DMLocation": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "DF_Load_DIM_EVSE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Load_DIM_CHARGING_STATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_DIM_EVSE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2EVSE": {},
									"DMChargigStation": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "DF_Load_FACT_Transactions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Load_DIM_EVSE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Load_FACT_Transactions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DWH2TRANSACTION": {},
									"DMEVSE": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Load_DIM_CPO')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Load_DIM_Location')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Load_DIM_MODEL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Load_DIM_CHARGING_STATION')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Load_DIM_EVSE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Load_FACT_Transactions')]"
			]
		}
	]
}