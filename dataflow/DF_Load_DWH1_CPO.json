{
	"name": "DF_Load_DWH1_CPO",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_CPO",
						"type": "DatasetReference"
					},
					"name": "STGCPO"
				},
				{
					"dataset": {
						"referenceName": "DWH1_CPO",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DWH1_CPO",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as string,\n\t\tTECHNICAL_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGCPO\nsource(output(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSTGCPO derive(FUNCTIONAL_DATE = toInteger(left(FUNCTIONAL_DATE,8)),\n\t\tTECHNICAL_DATE = toDate(left(TECHNICAL_DATE,10),'MM/dd/yyyy'),\n\t\tFLAG = 0) ~> DerivedColumn1\nDerivedColumn1, source1 join(STGCPO@CPO_PK == source1@CPO_PK\n\t&& DerivedColumn1@TECHNICAL_DATE == source1@TECHNICAL_DATE,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(equals(STGCPO@CPO_PK, source1@CPO_PK) && equals(DerivedColumn1@TECHNICAL_DATE, source1@TECHNICAL_DATE))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tCPO_PK as string,\n\t\tNAME as string,\n\t\tCPO_GROUP_FK as string,\n\t\tBUSINESS_ACTIVITY as string,\n\t\tSERVICE_STATUS as string,\n\t\tCREATION_DATE as date,\n\t\tIN_SERVICE_DATE as date,\n\t\tRETIRED_DATE as date,\n\t\tFUNCTIONAL_DATE as integer,\n\t\tTECHNICAL_DATE as date,\n\t\tId as integer,\n\t\tACTIVE as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CPO_PK','TECHNICAL_DATE'],\n\tformat: 'table',\n\tpostSQLs:['update [DWH1].CPO Set ACTIVE=0;\\n\\nupdate [DWH1].[CPO] Set ACTIVE=1\\nwhere TECHNICAL_DATE = (SELECT MAX(TECHNICAL_DATE)\\nFROM [DWH1].CPO);'],\n\tmapColumn(\n\t\tCPO_PK = STGCPO@CPO_PK,\n\t\tNAME = STGCPO@NAME,\n\t\tCPO_GROUP_FK = STGCPO@CPO_GROUP_FK,\n\t\tBUSINESS_ACTIVITY = STGCPO@BUSINESS_ACTIVITY,\n\t\tSERVICE_STATUS = STGCPO@SERVICE_STATUS,\n\t\tCREATION_DATE = STGCPO@CREATION_DATE,\n\t\tIN_SERVICE_DATE = STGCPO@IN_SERVICE_DATE,\n\t\tRETIRED_DATE = STGCPO@RETIRED_DATE,\n\t\tFUNCTIONAL_DATE = DerivedColumn1@FUNCTIONAL_DATE,\n\t\tTECHNICAL_DATE = DerivedColumn1@TECHNICAL_DATE,\n\t\tACTIVE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}